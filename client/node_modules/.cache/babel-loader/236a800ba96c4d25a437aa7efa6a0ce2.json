{"ast":null,"code":"import React,{Fragment}from\"react\";import{Link}from\"react-router-dom\";import Moment from\"react-moment\";import{connect}from\"react-redux\";import{addLike,removeLike,deletePost}from\"../../actions/post\";var PostItem=function PostItem(_ref){var addLike=_ref.addLike,removeLike=_ref.removeLike,deletePost=_ref.deletePost,auth=_ref.auth,_ref$post=_ref.post,_id=_ref$post._id,text=_ref$post.text,name=_ref$post.name,avatar=_ref$post.avatar,user=_ref$post.user,likes=_ref$post.likes,comments=_ref$post.comments,date=_ref$post.date,showActions=_ref.showActions;return/*#__PURE__*/React.createElement(\"div\",{class:\"post bg-white p-1 my-1\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/profile/\".concat(user)},/*#__PURE__*/React.createElement(\"img\",{class:\"round-img\",src:avatar,alt:\"\"}),/*#__PURE__*/React.createElement(\"h4\",null,name))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{class:\"my-1\"},text),/*#__PURE__*/React.createElement(\"p\",{class:\"post-date\"},\"Posted on \",/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},date)),showActions&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){return addLike(_id);},type:\"button\",class:\"btn btn-light\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-thumbs-up\"}),/*#__PURE__*/React.createElement(\"span\",null,likes.length>0&&/*#__PURE__*/React.createElement(\"span\",{class:\"comment-count\"},likes.length))),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){return removeLike(_id);},type:\"button\",class:\"btn btn-light\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-thumbs-down\"}),\" \"),/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(_id),class:\"btn btn-primary\"},\"Discussion\",\" \",comments.length>0&&/*#__PURE__*/React.createElement(\"span\",{class:\"comment-count\"},comments.length)),!auth.loading&&user===auth.user._id&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){return deletePost(_id);},type:\"button\",class:\"btn btn-danger\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-times\"})))));};PostItem.defaultProps={showActions:true};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{addLike:addLike,removeLike:removeLike,deletePost:deletePost})(PostItem);","map":{"version":3,"sources":["/home/decoders/Desktop/DEVCONNECTOR/client/src/components/posts/PostItem.js"],"names":["React","Fragment","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <div class=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img class=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p class=\"my-1\">{text}</p>\n      <p class=\"post-date\">\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n      </p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={(e) => addLike(_id)}\n            type=\"button\"\n            class=\"btn btn-light\"\n          >\n            <i class=\"fas fa-thumbs-up\"></i>\n            <span>\n              {likes.length > 0 && (\n                <span class=\"comment-count\">{likes.length}</span>\n              )}\n            </span>\n          </button>\n          <button\n            onClick={(e) => removeLike(_id)}\n            type=\"button\"\n            class=\"btn btn-light\"\n          >\n            <i class=\"fas fa-thumbs-down\"></i>{\" \"}\n          </button>\n          <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\n            Discussion{\" \"}\n            {comments.length > 0 && (\n              <span class=\"comment-count\">{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={(e) => deletePost(_id)}\n              type=\"button\"\n              class=\"btn btn-danger\"\n            >\n              <i class=\"fas fa-times\"></i>\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}